name: Create Version Line Branch

on:
  workflow_dispatch:
    inputs:
      version_line:
        description: 'New version line to create (e.g. 1.2.x)'
        required: false

jobs:
  create-version-line-branch:
    name: Create Version Line Branch Off Of Main
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # gets full history
        fetch-tags: true
    # TODO make into a script?
    # TODO: if version line input is passed in, validate and use that instead
    - name: Get Latest Version Line
      id: latest
      run: |
        git branch -a
        # Get the last version line branch in the form of <major>.<minor>.x
        latest=$(git branch -a | grep -P "\d+\.\d+\.x" | sort -V | tail -n1 | sed -e 's/remotes\/origin\///g')
        echo "Last version line branch: ${latest}"

        # Bump the minor version in the version line branch
        new_version_line=$(echo $latest | awk -F'[.]' '{minor=$2; minor+=1; printf("%d.%d.%s\n", $1, minor, $3)}')
        echo "New version line: ${new_version_line}"
        echo "new_version_line=${new_version_line}" >> "$GITHUB_OUTPUT"
    - name: Create Version Line Branch
      id: create-branch
      run: |
        # TODO: need to check if there are any releases in this version line yet, do we need to include?
        git checkout -b ${{ steps.latest.outputs.new_version_line }} main
        git push origin ${{ steps.latest.outputs.new_version_line }}
        # if there's no 1.x.x branch, take the latest version released?
    - name: Bump Mainline Tag
      run: |
        new_version_line=$(echo ${{ steps.latest.outputs.new_version_line }} | awk -F'[.]' '{minor=$2; minor+=2; printf("%d.%d.0\n", $1, minor)}')
        echo "Bumping main-line version to: v${new_version_line}"
        git tag v${new_version_line}
        git push origin v${new_version_line}

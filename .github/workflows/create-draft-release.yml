name: Create or Update Draft Release

on:
  push:
    branches:
    - main
  repository_dispatch:
    types: [ version-bump ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the release to cut (e.g. 1.2.3)'
        required: false

concurrency: release

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.x
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # gets full history
        fetch-tags: true

    # TODO 1- why is main draft release not picking up the latest tag we create - v1.5.0
    # TODO NOT DELETING previously drafted
    # TODO don't draft a release if the new version is the same as last release
    - name: Reset Draft Release
      id: reset
      uses: paketo-buildpacks/github-config/actions/release/reset-draft@main
      with:
        repo: ${{ github.repository }}
        token: ${{ github.token }}
    - name: Get Latest Tag on Branch ${{ github.ref_name }}
      id: latest
      run: |
        version=$(git describe --tags --abbrev=0 ${{ github.ref_name }})
        echo $version
        echo "version=${version}" >> "$GITHUB_OUTPUT"
    - name: Calculate Semver Tag
      if: github.event.inputs.version == ''
      id: semver
      uses: paketo-buildpacks/github-config/actions/tag/calculate-semver@semver-only
      with:
        repo: ${{ github.repository }}
        token: ${{ github.token }}
        ref-name: ${{ github.ref_name }}
        latest-version: ${{ steps.latest.outputs.version }}
    - name: Set Release Tag
      id: tag
      run: |
        tag="${{ github.event.inputs.version }}"
        if [ -z "${tag}" ]; then
          tag="${{ steps.semver.outputs.tag }}"
        fi
        echo "tag=${tag}" >> "$GITHUB_OUTPUT"
    - name: Create Release
      uses: paketo-buildpacks/github-config/actions/release/create@main
      with:
        repo: ${{ github.repository }}
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
        tag_name: v${{ steps.tag.outputs.tag }}
        target_commitish: ${{ github.sha }}
        name: v${{ steps.tag.outputs.tag }}
        draft: true
